<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<context:annotation-config />

	<!--
		DATABASE SETUP 
	 -->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:example" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="newsEntryDao" class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.NewsEntryDaoImpl">
	</bean>
	
	<bean id="dataBaseInitializer" class="net.dontdrinkandroot.example.angularrestspringsecurity.dao.DataBaseInitializer" init-method="initDataBase">
		<constructor-arg ref="newsEntryDao" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
		INIT REST COMPONENTS 
	 -->
	
	<context:component-scan base-package="net.dontdrinkandroot.example.angularrestspringsecurity.rest.resources" />
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	<bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider>
			<security:user-service id="userService">
				<security:user name="admin" password="20460e23c3322b4e27ee8048250a66ae7d487a7e77cc80d284b4caaa56d9b6ce3c3d98481da1462e" authorities="admin, user" />
				<security:user name="user" password="020759b5adb8373064e2da2fb2ced125f1be8ba252aeee20072d8e8c5914129b764b41228f49f0d1" authorities="user" />
			</security:user-service>
			<security:password-encoder ref="encoder"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless"
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" />
		<security:intercept-url method="GET" pattern="/rest/news/**" access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/news/**" access="hasRole('admin')" />
		<security:intercept-url method="DELETE" pattern="/rest/news/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="net.dontdrinkandroot.example.angularrestspringsecurity.rest.UnauthorizedEntryPoint" />

	<bean class="net.dontdrinkandroot.example.angularrestspringsecurity.rest.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="authenticationManager" />
		<constructor-arg ref="userService" />
	</bean>

	<!-- <security:http use-expressions="true" entry-point-ref="forbiddenEntryPoint">
		<security:intercept-url method="GET" pattern="/rest/news/**"
			access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/news/**"
			access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/news/**"
			access="hasRole('admin')" />
		<security:intercept-url method="DELETE"
			pattern="/rest/news/**" access="hasRole('admin')" />
		<security:form-login login-page="/login.html"
			default-target-url="/#!/loggedin/" always-use-default-target="true" />
		<security:logout logout-url="/logout.html" />
	</security:http> -->

</beans>